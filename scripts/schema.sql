DROP SCHEMA IF EXISTS portfolio;

CREATE SCHEMA IF NOT EXISTS portfolio;

USE portfolio;

CREATE TABLE IF NOT EXISTS roles(
	ID INT AUTO_INCREMENT NOT NULL,
    ROLE_NAME VARCHAR(15) NOT NULL,
    CONSTRAINT PK_roles_id PRIMARY KEY(ID),
    CONSTRAINT UQ_roles_role_name UNIQUE(ROLE_NAME)
);

CREATE TABLE IF NOT EXISTS users(
	ID INT AUTO_INCREMENT NOT NULL,
    USER_NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    USER_PASSWORD VARCHAR(255) NOT NULL,
    CREATION_DATE TIMESTAMP NOT NULL,
    ROLE_ID INT NOT NULL,
    CONSTRAINT PK_users_id PRIMARY KEY(ID),
    CONSTRAINT FK_users_role_id FOREIGN KEY(ROLE_ID) REFERENCES portfolio.roles(ID),
    CONSTRAINT UQ_users_user_name UNIQUE(USER_NAME),
    CONSTRAINT UQ_users_email UNIQUE(EMAIL)
);

CREATE TABLE IF NOT EXISTS cities(
	ID INT AUTO_INCREMENT NOT NULL,
    CITY_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_cities_id PRIMARY KEY(ID),
    CONSTRAINT UQ_cities_city_name UNIQUE(CITY_NAME)
);

CREATE TABLE IF NOT EXISTS localities(
	ID INT AUTO_INCREMENT NOT NULL,
    LOCALITY_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_localities_id PRIMARY KEY(ID),
    CONSTRAINT UQ_localities_locality_name UNIQUE(LOCALITY_NAME)
);

CREATE TABLE IF NOT EXISTS provinces(
	ID INT AUTO_INCREMENT NOT NULL,
    PROVINCE_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_provinces_id PRIMARY KEY(ID),
    CONSTRAINT UQ_provinces_province_name UNIQUE(PROVINCE_NAME)
);

CREATE TABLE IF NOT EXISTS countries(
	ID INT AUTO_INCREMENT NOT NULL,
    COUNTRY_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_countries_id PRIMARY KEY(ID),
    CONSTRAINT UQ_countries_country_name UNIQUE(COUNTRY_NAME)
);

CREATE TABLE IF NOT EXISTS addresses(
	ID INT AUTO_INCREMENT NOT NULL,
    CITY_ID INT NOT NULL,
    LOCALITY_ID INT NOT NULL,
    PROVINCE_ID INT,
    COUNTRY_ID INT NOT NULL,
    CONSTRAINT PK_address_id PRIMARY KEY(ID),
    CONSTRAINT FK_addresses_city_id FOREIGN KEY(CITY_ID) REFERENCES portfolio.cities(ID),
    CONSTRAINT FK_addresses_locality_id FOREIGN KEY(LOCALITY_ID) REFERENCES portfolio.localities(ID),
    CONSTRAINT FK_addresses_province_id FOREIGN KEY(PROVINCE_ID) REFERENCES portfolio.provinces(ID),
    CONSTRAINT FK_addresses_country_id FOREIGN KEY(COUNTRY_ID) REFERENCES portfolio.countries(ID),
    CONSTRAINT UQ_addresses_city_id_locality_id_province_id_country_id UNIQUE(CITY_ID, LOCALITY_ID, PROVINCE_ID, COUNTRY_ID)
);

CREATE TABLE IF NOT EXISTS persons(
	ID INT AUTO_INCREMENT NOT NULL,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    PROFILE_PHOTO_URL VARCHAR(255) NOT NULL,
    TITLE VARCHAR(30) NOT NULL,
    ABOUT_ME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    BANNER_URL VARCHAR(255) NOT NULL,
    LINKEDIN_URL VARCHAR(255) NOT NULL,
    GITHUB_URL VARCHAR(255) NOT NULL,
    CV_URL VARCHAR(255) NOT NULL,
	ADDRESS_ID INT NOT NULL,
    CONSTRAINT PK_persons_id PRIMARY KEY(ID),
    CONSTRAINT FK_persons_address_id FOREIGN KEY(ADDRESS_ID) REFERENCES portfolio.addresses(ID),
    CONSTRAINT UQ_persons_email UNIQUE(EMAIL)
);

CREATE TABLE IF NOT EXISTS technologies(
	ID INT AUTO_INCREMENT NOT NULL,
    TECHNOLOGY_NAME VARCHAR(30) NOT NULL,
    LOGO_URL VARCHAR(255) NOT NULL,
    PERSON_ID INT NOT NULL,
    CONSTRAINT PK_technologies_id PRIMARY KEY(ID),
    CONSTRAINT FK_technologies_person_id FOREIGN KEY(PERSON_ID) REFERENCES portfolio.persons(ID),
    CONSTRAINT UQ_technologies_technology_name UNIQUE(TECHNOLOGY_NAME)
);

CREATE TABLE IF NOT EXISTS language_levels(
	ID INT AUTO_INCREMENT NOT NULL,
    LANGUAGE_LEVEL_NAME CHAR(2) NOT NULL,
    CONSTRAINT PK_language_levels_id PRIMARY KEY(ID),
    CONSTRAINT UQ_language_levels_language_level_name UNIQUE(LANGUAGE_LEVEL_NAME)
);

CREATE TABLE IF NOT EXISTS languages(
	ID INT AUTO_INCREMENT NOT NULL,
    LANGUAGE_NAME VARCHAR(30) NOT NULL,
    CERTIFICATE_URL VARCHAR(255),
    PERSON_ID INT NOT NULL,
    LANGUAGE_LEVEL_ID INT NOT NULL,
    CONSTRAINT PK_languages_id PRIMARY KEY(ID),
    CONSTRAINT FK_languages_person_id FOREIGN KEY(PERSON_ID) REFERENCES portfolio.persons(ID),
    CONSTRAINT FK_languages_language_level_id FOREIGN KEY(LANGUAGE_LEVEL_ID) REFERENCES portfolio.language_levels(ID),
    CONSTRAINT UQ_languages_language_name UNIQUE(LANGUAGE_NAME)
);

CREATE TABLE IF NOT EXISTS institutes_universities(
	ID INT AUTO_INCREMENT NOT NULL,
    INSTITUTE_UNIVERSITY_NAME VARCHAR(60) NOT NULL,
    LOGO_URL VARCHAR(255),
    ADDRESS_ID INT NOT NULL,
    CONSTRAINT PK_institutes_universities_id PRIMARY KEY(ID),
    CONSTRAINT FK_institutes_universities_address_id FOREIGN KEY(ADDRESS_ID) REFERENCES portfolio.addresses(ID),
    CONSTRAINT UQ_institutes_universities_institute_university_name UNIQUE(INSTITUTE_UNIVERSITY_NAME)
);

CREATE TABLE IF NOT EXISTS courses(
	ID INT AUTO_INCREMENT NOT NULL,
    TITLE VARCHAR(30) NOT NULL,
    IS_APPROVED BIT NOT NULL,
    CERTIFICATE_URL VARCHAR(255),
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    PERSON_ID INT NOT NULL,
    INSTITUTE_UNIVERSITY_ID INT NOT NULL,
    CONSTRAINT PK_courses_id PRIMARY KEY(ID),
    CONSTRAINT FK_courses_person_id FOREIGN KEY(PERSON_ID) REFERENCES portfolio.persons(ID),
    CONSTRAINT FK_courses_institute_university_id FOREIGN KEY(INSTITUTE_UNIVERSITY_ID) REFERENCES portfolio.institutes_universities(ID),
    CONSTRAINT UQ_courses_title_institute_university_id UNIQUE(TITLE, INSTITUTE_UNIVERSITY_ID)
);

CREATE TABLE IF NOT EXISTS career_types(
	ID INT AUTO_INCREMENT NOT NULL,
    CAREER_TYPE_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_career_types_id PRIMARY KEY(ID),
    CONSTRAINT UQ_career_types_career_type_name UNIQUE(CAREER_TYPE_NAME)
);

CREATE TABLE IF NOT EXISTS careers(
	ID INT AUTO_INCREMENT NOT NULL,
    CAREER_NAME VARCHAR(50) NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
	IS_FINISHED BIT NOT NULL,
    APPROVED_SUBJECTS TINYINT UNSIGNED NOT NULL,
    TOTAL_SUBJECTS TINYINT UNSIGNED NOT NULL,
    STUDY_PLAN_URL VARCHAR(255) NOT NULL,
    DESCRIPT VARCHAR(255) NOT NULL,
    PERSON_ID INT NOT NULL,
    INSTITUTE_UNIVERSITY_ID INT NOT NULL,
    CAREER_TYPE_ID INT NOT NULL,
    CONSTRAINT PK_careers_id PRIMARY KEY(ID),
    CONSTRAINT FK_careers_person_id FOREIGN KEY(PERSON_ID) REFERENCES portfolio.persons(ID),
    CONSTRAINT FK_careers_institute_university_id FOREIGN KEY(INSTITUTE_UNIVERSITY_ID) REFERENCES portfolio.institutes_universities(ID),
    CONSTRAINT FK_careers_career_type_id FOREIGN KEY(CAREER_TYPE_ID) REFERENCES portfolio.career_types(ID),
    CONSTRAINT UQ_careers_career_name_institute_university_id UNIQUE(CAREER_NAME, INSTITUTE_UNIVERSITY_ID)
);

CREATE TABLE IF NOT EXISTS businesses(
	ID INT AUTO_INCREMENT NOT NULL,
    BUSINESS_NAME VARCHAR(30) NOT NULL,
    LOGO_URL VARCHAR(255),
    ADDRESS_ID INT NOT NULL,
    CONSTRAINT PK_businesses_id PRIMARY KEY(ID),
    CONSTRAINT FK_businesses_address_id FOREIGN KEY(ADDRESS_ID) REFERENCES portfolio.addresses(ID),
    CONSTRAINT UQ_businesses_business_name UNIQUE(BUSINESS_NAME)
);

CREATE TABLE IF NOT EXISTS project_types(
	ID INT AUTO_INCREMENT NOT NULL,
    PROJECT_TYPE_NAME VARCHAR(50) NOT NULL,
    CONSTRAINT PK_project_types_id PRIMARY KEY(ID),
    CONSTRAINT UQ_project_types_project_type_name UNIQUE(PROJECT_TYPE_NAME)
);

CREATE TABLE IF NOT EXISTS projects(
	ID INT AUTO_INCREMENT NOT NULL,
    PROJECT_NAME VARCHAR(50) NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    DESCRIPT VARCHAR(255) NOT NULL,
    IMAGE_URL VARCHAR(255),
    EVIDENCE_URL VARCHAR(255) NOT NULL,
    PROJECT_TYPE_ID INT NOT NULL,
    PERSON_ID INT NOT NULL,
    BUSINESS_ID INT,
    CONSTRAINT PK_projects_id PRIMARY KEY(ID),
    CONSTRAINT FK_projects_project_type_id FOREIGN KEY(PROJECT_TYPE_ID) REFERENCES portfolio.project_types(ID),
    CONSTRAINT FK_projects_person_id FOREIGN KEY(PERSON_ID) REFERENCES portfolio.persons(ID),
    CONSTRAINT FK_projects_business_id FOREIGN KEY(BUSINESS_ID) REFERENCES portfolio.businesses(ID)
);

CREATE TABLE IF NOT EXISTS seniority_types(
	ID INT AUTO_INCREMENT NOT NULL,
    SENIORITY_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_seniority_types_id PRIMARY KEY(ID),
    CONSTRAINT UQ_seniority_types_seniority_name UNIQUE(SENIORITY_NAME)
);

CREATE TABLE IF NOT EXISTS job_experience_types(
	ID INT AUTO_INCREMENT NOT NULL,
    JOB_EXPERIENCE_TYPE_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT PK_job_experience_types_id PRIMARY KEY(ID),
    CONSTRAINT UQ_job_experience_types_job_experience_type_name UNIQUE(JOB_EXPERIENCE_TYPE_NAME)
);

CREATE TABLE IF NOT EXISTS job_experiences(
	ID INT AUTO_INCREMENT NOT NULL,
    JOB_POSITION_NAME VARCHAR(30) NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    IS_CURRENT_JOB BIT NOT NULL,
    DESCRIPT VARCHAR(255) NOT NULL,
    SENIORITY_TYPE_ID INT NOT NULL,
    PERSON_ID INT NOT NULL,
    JOB_EXPERIENCE_TYPE_ID INT NOT NULL,
    BUSINESS_ID INT,
    CONSTRAINT PK_job_experiences_id PRIMARY KEY(ID),
    CONSTRAINT FK_job_experiences_seniority_type_id FOREIGN KEY(SENIORITY_TYPE_ID) REFERENCES portfolio.seniority_types(ID),
    CONSTRAINT FK_job_experiences_person_id FOREIGN KEY(PERSON_ID) REFERENCES portfolio.persons(ID),
    CONSTRAINT FK_job_experiences_job_experience_type_id FOREIGN KEY(JOB_EXPERIENCE_TYPE_ID) REFERENCES portfolio.job_experience_types(ID),
    CONSTRAINT FK_job_experiences_business_id FOREIGN KEY(BUSINESS_ID) REFERENCES portfolio.businesses(ID),
    CONSTRAINT UQ_job_experiences_job_position_name_business_id UNIQUE(JOB_POSITION_NAME, BUSINESS_ID)
);